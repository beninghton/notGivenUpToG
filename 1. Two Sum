class Solution(object):
    #def twoSum(self, nums, target):
    #    for i in range(0,len(nums)-1):
    #        for k in range(i+1, len(nums)):
    #            if nums[i] + nums[k] == target:
    #                return [i, k]
    #    return "Not found"

    ### Optimal Solution
    def twoSum(self, nums, target):
        mapIndex = {}
        res = []

        for i in range(0,len(nums)):
            if (target - nums[i]) in mapIndex:
                return [mapIndex[target - nums[i]], i]

            mapIndex[nums[i]] = i



sol = Solution()



import time

start_time = time.time() * 100
print sol.twoSum([2, 7, 4, 15], 9)
print("--- %s seconds ---" % (time.time() - start_time))

start_time = time.time() * 100
print sol.twoSumOpt([7, 2, 7, 15], 9)
print("--- %s seconds ---" % (time.time() - start_time))
